//@version=6
indicator("Breakout Buy Signal with SL1, SL2, and TP1-TP4", overlay=true)

// === Input ===
entryPrice = input.float(4272, "Entry Price", step=1)
rsiLength = input.int(14, "RSI Length")
smoothingLength = input.int(14, "RSI Smoothing Length")
maLength = input.int(9, "MA9 Length")
sl2Ticks = input.int(10, "SL2 Ticks (below Entry)", minval=1)
tpIncrement = input.int(10, "TP Increment (ticks)", minval=1)

// === Indicators ===
rsi = ta.rsi(close, rsiLength)
rsiSmoothing = ta.sma(rsi, smoothingLength)
ma9 = ta.sma(close, maLength)

// === Levels ===
sl2Level = entryPrice - sl2Ticks
tp1 = entryPrice + tpIncrement * 1
tp2 = entryPrice + tpIncrement * 2
tp3 = entryPrice + tpIncrement * 3
tp4 = entryPrice + tpIncrement * 4

// === Raw Conditions ===
priceBreakAbove = close > entryPrice
notBreakBelowMA9 = low > ma9
rsiAboveSmooth = rsi > rsiSmoothing

rawBuyCondition = priceBreakAbove and notBreakBelowMA9 
rawSL1Condition = close < ma9 and rsi < rsiSmoothing
rawSL2Condition = close < sl2Level

// === Trade State ===
var bool inTrade = false
var bool slTriggered = false
var bool sl2LabelDrawn = false
var bool tpLabelsDrawn = false
var bool tp1Hit = false
var bool tp2Hit = false
var bool tp3Hit = false
var bool tp4Hit = false

// === Reset Condition ===
resetCondition = close < entryPrice * 0.99
if resetCondition
    slTriggered := false
    inTrade := false
    sl2LabelDrawn := false
    tpLabelsDrawn := false
    tp1Hit := false
    tp2Hit := false
    tp3Hit := false
    tp4Hit := false

// === Buy Logic ===
buyCondition = rawBuyCondition and not slTriggered
if buyCondition
    inTrade := true
    slTriggered := false

// === SL1 and SL2 Logic ===
sl1Condition = inTrade and not slTriggered and rawSL1Condition
sl2Condition = inTrade and not slTriggered and rawSL2Condition

// === Trigger SL
if sl1Condition or sl2Condition
    slTriggered := true
    inTrade := false

// === TP Hit Conditions (One-time Labels with vertical offset)
if inTrade and not tp1Hit and close >= tp1
    label.new(bar_index, tp1 + syminfo.mintick * 10, text="TP1 HIT", style=label.style_label_down, color=color.blue, textcolor=color.white, size=size.small, yloc=yloc.price)
    tp1Hit := true

if inTrade and not tp2Hit and close >= tp2
    label.new(bar_index, tp2 + syminfo.mintick * 12, text="TP2 HIT", style=label.style_label_down, color=color.blue, textcolor=color.white, size=size.small, yloc=yloc.price)
    tp2Hit := true

if inTrade and not tp3Hit and close >= tp3
    label.new(bar_index, tp3 + syminfo.mintick * 14, text="TP3 HIT", style=label.style_label_down, color=color.blue, textcolor=color.white, size=size.small, yloc=yloc.price)
    tp3Hit := true

if inTrade and not tp4Hit and close >= tp4
    label.new(bar_index, tp4 + syminfo.mintick * 16, text="TP4 HIT", style=label.style_label_down, color=color.blue, textcolor=color.white, size=size.small, yloc=yloc.price)
    tp4Hit := true

// === Plotting Levels
plot(entryPrice, title="Entry Level", color=color.blue, linewidth=1, style=plot.style_line)
plot(sl2Level, title="SL2 Level", color=color.red, linewidth=1, style=plot.style_linebr)
plot(tp1, title="TP1", color=color.lime, linewidth=1, style=plot.style_line)
plot(tp2, title="TP2", color=color.lime, linewidth=1, style=plot.style_line)
plot(tp3, title="TP3", color=color.lime, linewidth=1, style=plot.style_line)
plot(tp4, title="TP4", color=color.lime, linewidth=1, style=plot.style_line)

// === Labels
plotshape(buyCondition, title="Buy Signal", location=location.belowbar,
     style=shape.labelup, color=color.green, text="B", textcolor=color.white, size=size.normal)

plotshape(sl1Condition, title="SL1 Hit", location=location.abovebar,
     style=shape.labeldown, color=color.red, text="SL1", textcolor=color.white)

plotshape(sl2Condition, title="SL2 Hit", location=location.abovebar,
     style=shape.labeldown, color=color.red, text="SL2", textcolor=color.white, size=size.normal)

// === Draw SL2 + TP Labels Once
if buyCondition and not sl2LabelDrawn
    label.new(bar_index, sl2Level - syminfo.mintick * 10, text="SL2", style=label.style_label_left, color=color.red, textcolor=color.white, size=size.normal)
    sl2LabelDrawn := true

if buyCondition and not tpLabelsDrawn
    label.new(bar_index, tp1 + syminfo.mintick , text="TP1", style=label.style_label_left, yloc=yloc.price, color=color.lime, textcolor=color.black, size=size.tiny)
    label.new(bar_index, tp2 + syminfo.mintick , text="TP2", style=label.style_label_left, yloc=yloc.price, color=color.lime, textcolor=color.black, size=size.tiny)
    label.new(bar_index, tp3 + syminfo.mintick , text="TP3", style=label.style_label_left, yloc=yloc.price, color=color.lime, textcolor=color.black, size=size.tiny)
    label.new(bar_index, tp4 + syminfo.mintick , text="TP4", style=label.style_label_left, yloc=yloc.price, color=color.lime, textcolor=color.black, size=size.tiny)
    tpLabelsDrawn := true

// === Alerts
alertcondition(buyCondition, title="Buy Signal Alert", message="Breakout Buy Signal triggered")
alertcondition(sl1Condition, title="SL1 Alert", message="Stop Loss 1 triggered")
alertcondition(sl2Condition, title="SL2 Alert", message="Stop Loss 2 triggered (entry - buffer)")
